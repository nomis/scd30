[platformio]
extra_configs = pio_local.ini

[common]
framework = arduino
build_flags = -std=c++11 -Os
	-DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
	-DNO_GLOBAL_MDNS
	-DARDUINOJSON_EMBEDDED_MODE=1
	-DARDUINOJSON_ENABLE_STD_STRING=1
	-DARDUINOJSON_ENABLE_STD_STREAM=0
	-DARDUINOJSON_ENABLE_ARDUINO_STRING=0
	-DARDUINOJSON_ENABLE_ARDUINO_STREAM=1
	-DARDUINOJSON_ENABLE_ARDUINO_PRINT=1
	-DARDUINOJSON_USE_DOUBLE=0
	-DARDUINOJSON_USE_LONG_LONG=0
	!echo "-DSCD30_REVISION=\\\""$(git describe --dirty=+ --always)"\\\""
src_build_flags = -Wall -Wextra -Werror
build_unflags = -fno-rtti
lib_ldf_mode = chain+
lib_deps =
	nomis/uuid-common@^1.1.0
	nomis/uuid-log@^2.2.0
	nomis/uuid-console@^0.8.0
	nomis/uuid-syslog@^2.1.2
	nomis/uuid-telnet@^0.1.2
	nomis/uuid-modbus@^0.2.0
	bblanchon/ArduinoJson@~6.19.1
filesystem = littlefs

[env:d1_mini]
platform = espressif8266@^3.0.0
board = d1_mini
board_build.f_cpu = 160000000L
board_build.filesystem = ${common.filesystem}
framework = ${common.framework}
build_flags = ${common.build_flags}
src_build_flags = ${common.src_build_flags}
build_unflags = ${common.build_unflags}
board_build.ldscript = eagle.flash.4m1m.ld
lib_ldf_mode = ${common.lib_ldf_mode}
lib_deps = ${common.lib_deps}
	ESP8266WiFi

[env:s2_mini]
;platform = espressif32@^3.5.0
platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.2.2solo1/platform-tasmota-espressif32-2.0.2solo1.zip
platform_packages =
	framework-arduinoespressif32 @ https://github.com/tasmota/arduino-esp32/releases/download/2.0.1.1/framework-arduinoespressif32-release_IDF4.4.tar.gz
	platformio/tool-esptoolpy @ https://github.com/tasmota/esptool/releases/download/v3.2.1/esptool-3.2.1.zip
board = esp32-s2-saola-1
board_build.f_cpu = 240000000L
board_build.filesystem = ${common.filesystem}
framework = ${common.framework}
build_flags = ${common.build_flags}
	-DARDUINO_ESP32_WEMOS_S2MINI
	-DESP32_WEMOS_S2MINI
	-DBOARD_HAS_PSRAM
	-DARDUINO_USB_CDC_ON_BOOT=1
	-DARDUINO_USB_DFU_ON_BOOT=0
	-D_GLIBCXX_USE_C99
src_build_flags = ${common.src_build_flags}
build_unflags = ${common.build_unflags}
board_build.partitions = huge_app.csv
lib_ldf_mode = ${common.lib_ldf_mode}
lib_deps = ${common.lib_deps}
